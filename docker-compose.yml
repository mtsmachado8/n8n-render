version: '3.8'

volumes:
  # db_storage:
  n8n_storage:

services:
  # postgres:
  #   image: postgres:16
  #   restart: always
  #   environment:
  #     - POSTGRES_USER
  #     - POSTGRES_PASSWORD
  #     - POSTGRES_DB
  #     - POSTGRES_NON_ROOT_USER
  #     - POSTGRES_NON_ROOT_PASSWORD
  #   volumes:
  #     - db_storage:/var/lib/postgresql/data
  #     - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
  #   healthcheck:
  #     test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
  #     interval: 5s
  #     timeout: 5s
  #     retries: 10

  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: always
    platform: linux/amd64
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=${DB_POSTGRESDB_HOST}
      - DB_POSTGRESDB_PORT=${DB_POSTGRESDB_PORT}
      - DB_POSTGRESDB_DATABASE=${DB_POSTGRESDB_DATABASE}
      - DB_POSTGRESDB_USER=${DB_POSTGRESDB_USER}
      - DB_POSTGRESDB_PASSWORD=${DB_POSTGRESDB_PASSWORD}
      - DB_POSTGRESDB_SCHEMA=${DB_POSTGRESDB_SCHEMA}
      - DB_POSTGRESDB_SSL_REJECT_UNAUTHORIZED=false
      - DB_POSTGRESDB_SSL=true
      - DB_POSTGRESDB_CONNECTION_TIMEOUT=60000
      - N8N_RELEASE_DATE=2025-03-11T21:53:00Z
    ports:
      - 5678:5678
    # links:
    #   - postgres
    volumes:
      - n8n_storage:/home/node/.n8n
    # depends_on:
    #   postgres:
    #     condition: service_healthy